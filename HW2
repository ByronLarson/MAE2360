HW 2
10/20/21
Section 003
Larson, Byron
7148



Problem 1

Solve the cubic equation:

#include <iostream>
#include <math.h>

int main()
{
    int a,b,c,d;
    double p,q,r,x,y;
    printf("Coefficient of a:");
    scanf("%d",&a);
    
    printf("Coefficient of b:");
    scanf("%d",&b);
    
    printf("Coefficient of c:");
    scanf("%d",&c);
    
    printf("Coefficient of d:");
    scanf("%d",&d);
    
    q=(p*p*p)+((b*c)-(3*a*d)/(6*a*a));
    
    p=-b/(3*a);
    
    r=c/(3*a);
    
    x=pow((q+(pow((pow(q,2)+pow((r-pow(p,2)),3)),1/2))),1/3)+pow((q-(pow((pow(q,2)+pow((r-pow(p,2)),3)),1/2))),1/3)+p;
    
    
    printf("x=%1f",x);
    
    
    return 0;
}


Problem 2
x sin x = ex - x sin (x2),
by the Newton-Raphson method in the interval, [-2, 2].

#include <stdio.h> 
#include <math.h> 
#define EPS 1.0e-10 
 
double f(double x) 
{ 
  return ((x*sin(x))-exp(x)+(x*sin(x*x))); 
} 
/*fp is the derivitive of f*/
double fp(double x) 
{ 
  return ((x*cos(x))+sin(x)-exp(x)+(2*x*x*cos(x*x))+sin(x*x)); 
} 
 
double newton(double x) 
{ 
  return x - f(x)/fp(x); 
} 
 
int main() 
{ 
  double x1, x2; 
  int i; 
 
  printf("Enter initial guess  ="); 
  scanf("%lf", &x1); 
 
  if (fp(x1)==0.0) { 
    printf("No convergence.\n"); 
    return 0; 
  } 
 
  for (i=0;i<100;i++) 
  { 
    x2=newton(x1); 
    if (fabs(x1-x2)< EPS) break; 
    x1=x2; 
  } 
 
  printf("iteration = %d\n", i);  
  printf("x= %lf\n", x1); 
  return 0;
}


Problem 3
ex - 3 x = 0,
using the bisection method.

/* Compute the square root of exp(x)-3*x */ 
#include <stdio.h> 
#include <math.h> 
#define EPS 1.0e-10 
#define N 100 
 
double f(double x) 
{ 
return exp(x)-3*x; 
} 
 
/* start of main */ 
int main() 
{ 
double x1, x2, x3; 
int count; 

/* for exp(x)-3*x guess between 0.5 and 0.8 or 1.4 and 1.8 */ 
printf("Enter xleft and xright separated by space ="); 
scanf("%lf %lf", &x1, &x2); 
 
/* sanity check */ 
if (f(x1)*f(x2)>0) {printf("Invalid x1 and x2 !\n"); return 0;} 
 
/* bisection start */ 
for (count=0;count< N; count++) 
 { 
 x3= (x1+x2)/2.0; 
 if (f(x1)*f(x3)<0 ) x2=x3; else x1=x3; 
 if ( f(x3)==0.0 || fabs(x1-x2)< EPS ) break; 
} 
 
printf("iteration = %d\n", count); 
printf("x= %lf\n", x1); 
return 0; 
}  


Problem 4
Solve the following 10 simultaneous equations by the Gauss-Jordan elimination method.


Problem 5
Solve the following set of nonlinear equations by the Gauss-Seidel method.


Problem 6
Numerically compute the velocity from the table above using the central difference scheme


Problem 7
Evaluate analytically:

Write a C program to numerically integrate the above using the Simpson rule.


